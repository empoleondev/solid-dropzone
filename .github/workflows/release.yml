name: Release

on:
  push:
    paths:
      - ".changeset/**"
      - "packages/**"
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Build
        run: yarn build

      - name: Create release Pull Request or publish to NPM
        id: changesets
        uses: changesets/action@v1
        with:
          publish: yarn release
          commit: "ci(changesets): version packages"
          createGithubReleases: true
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create @latest release
        if: steps.changesets.outputs.published != 'true'
        run: |
          git checkout main
          yarn version
          yarn release

          # Get the new version from package.json
          NEW_VERSION=$(node -p "require('./package.json').version")

          # Create a corresponding pre-release on GitHub
          gh release create "v$NEW_VERSION" --prerelease --notes "Latest release."
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}